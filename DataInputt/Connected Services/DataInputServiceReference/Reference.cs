//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataInputt.DataInputServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfServer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwort {
            get {
                return this.PasswortField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswortField, value) != true)) {
                    this.PasswortField = value;
                    this.RaisePropertyChanged("Passwort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Time", Namespace="http://schemas.datacontract.org/2004/07/WcfServer")]
    [System.SerializableAttribute()]
    public partial class Time : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int uIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int uId {
            get {
                return this.uIdField;
            }
            set {
                if ((this.uIdField.Equals(value) != true)) {
                    this.uIdField = value;
                    this.RaisePropertyChanged("uId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataInputServiceReference.IDataInputService", CallbackContract=typeof(DataInputt.DataInputServiceReference.IDataInputServiceCallback))]
    public interface IDataInputService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/CreateUser", ReplyAction="http://tempuri.org/IDataInputService/CreateUserResponse")]
        int CreateUser(DataInputt.DataInputServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/CreateUser", ReplyAction="http://tempuri.org/IDataInputService/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(DataInputt.DataInputServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/Login", ReplyAction="http://tempuri.org/IDataInputService/LoginResponse")]
        int Login(DataInputt.DataInputServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/Login", ReplyAction="http://tempuri.org/IDataInputService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(DataInputt.DataInputServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/GetTimes", ReplyAction="http://tempuri.org/IDataInputService/GetTimesResponse")]
        DataInputt.DataInputServiceReference.Time[] GetTimes(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/GetTimes", ReplyAction="http://tempuri.org/IDataInputService/GetTimesResponse")]
        System.Threading.Tasks.Task<DataInputt.DataInputServiceReference.Time[]> GetTimesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/AddTime", ReplyAction="http://tempuri.org/IDataInputService/AddTimeResponse")]
        void AddTime(DataInputt.DataInputServiceReference.Time time, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/AddTime", ReplyAction="http://tempuri.org/IDataInputService/AddTimeResponse")]
        System.Threading.Tasks.Task AddTimeAsync(DataInputt.DataInputServiceReference.Time time, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/Projects", ReplyAction="http://tempuri.org/IDataInputService/ProjectsResponse")]
        string[] Projects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/Projects", ReplyAction="http://tempuri.org/IDataInputService/ProjectsResponse")]
        System.Threading.Tasks.Task<string[]> ProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/CalculateEarnings", ReplyAction="http://tempuri.org/IDataInputService/CalculateEarningsResponse")]
        decimal CalculateEarnings(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataInputService/CalculateEarnings", ReplyAction="http://tempuri.org/IDataInputService/CalculateEarningsResponse")]
        System.Threading.Tasks.Task<decimal> CalculateEarningsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataInputServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDataInputService/EarningsCalculated")]
        void EarningsCalculated(System.Collections.Generic.Dictionary<int, decimal> earnings);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataInputServiceChannel : DataInputt.DataInputServiceReference.IDataInputService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataInputServiceClient : System.ServiceModel.DuplexClientBase<DataInputt.DataInputServiceReference.IDataInputService>, DataInputt.DataInputServiceReference.IDataInputService {
        
        public DataInputServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DataInputServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DataInputServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DataInputServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DataInputServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int CreateUser(DataInputt.DataInputServiceReference.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(DataInputt.DataInputServiceReference.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public int Login(DataInputt.DataInputServiceReference.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(DataInputt.DataInputServiceReference.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public DataInputt.DataInputServiceReference.Time[] GetTimes(int userId) {
            return base.Channel.GetTimes(userId);
        }
        
        public System.Threading.Tasks.Task<DataInputt.DataInputServiceReference.Time[]> GetTimesAsync(int userId) {
            return base.Channel.GetTimesAsync(userId);
        }
        
        public void AddTime(DataInputt.DataInputServiceReference.Time time, int userId) {
            base.Channel.AddTime(time, userId);
        }
        
        public System.Threading.Tasks.Task AddTimeAsync(DataInputt.DataInputServiceReference.Time time, int userId) {
            return base.Channel.AddTimeAsync(time, userId);
        }
        
        public string[] Projects() {
            return base.Channel.Projects();
        }
        
        public System.Threading.Tasks.Task<string[]> ProjectsAsync() {
            return base.Channel.ProjectsAsync();
        }
        
        public decimal CalculateEarnings(int id) {
            return base.Channel.CalculateEarnings(id);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateEarningsAsync(int id) {
            return base.Channel.CalculateEarningsAsync(id);
        }
    }
}
